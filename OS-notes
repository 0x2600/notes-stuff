### 连续内存分配：

空闲内存不能利用：
1. 外碎片，分配单元间的未使用内存
2. 内碎片，分配单元中的未使用内存

分区的动态分配：
1. 一个程序准许运行在内存中时，分配一个连续的区间
2. 分配一个连续的内存区间给运行的程序以访问数据
分配策略：
1. 首次适配
分配给应用程序第一个可以满足需求的内存区间。按地址从低到高
2. 最优适配
大小最匹配。
3. 最差适配
使用最大空闲内存区间。

1. 压缩式碎片整理。
2. 交换式碎片整理。


### 非连续内存分配：
1. 分段 segmentation
2. 分页 paging
分段。堆，栈等
段访问机制：
1. 段寄存器 + 地址寄存器
2. 单地址方案，单地址包含段地址和段内偏移组成
段表，base + limit

分页。页号 + 页内偏移
划分物理内存至固定大小的帧 frame
划分逻辑地址至相同大小的页 page
pages to frames
帧： 帧号 + 帧内偏移 -> 物理地址
页： 页号 + 页内偏移 -> 逻辑地址
page -> (page table) frame

页是连续的空间，帧不是连续的空间。
页表项的内容： flag, 帧号

分页机制的性能问题：
1. 页表可能空间大
2. 访问一个内存单元需要2次内存访问
处理方案：
caching, indirection
1. TLB，缓存近期访问的页帧转换表项
2. 二级页表。一级页表存二级页表的基址

反向页表：
页寄存器， 关联内存，哈希函数

### 虚拟内存
1. 程序大， 手动覆盖，把需要的指令和数据保存在内存中，单个程序内部
2. 多个程序，自动交换，暂时不执行的程序送到外存中，多个程序间
3. 自动的虚拟存储技术
编写局部性好的代码

虚存技术基本特征：
1. 大的用户空间
2. 部分交换
3. 虚拟地址空间使用的不连续。由于部分交换导出内存，访问的页不在内存。（由操作系统导入内存）

请求调页。页面置换
页面置换算法： 缺页中断发生，内存已满，选择内存中哪个物理页面被置换
1. 最优页面置换算法
对保存在内存中的每一个逻辑页面，计算在下一次访问之前还需等待多长时间，选择等待时间最长的那个作为被置换的页面
2. 先进先出算法： 选择在内存中驻留时间最长的页面淘汰之
3. 最近最久未使用算法： least recently used, LRU
4. 时钟页面置换算法： 





